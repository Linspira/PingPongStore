/*
 * File: app/view/Customers.js
 *
 * This file was generated by Sencha Architect version 4.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Orders.view.Customers', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.customers',

    requires: [
        'Orders.view.MoneyColumn',
        'Ext.chart.Chart',
        'Ext.util.Point',
        'Ext.chart.axis.Category',
        'Ext.chart.axis.Numeric',
        'Ext.chart.series.Column',
        'Ext.chart.series.Pie',
        'Ext.chart.Legend',
        'Ext.grid.Panel',
        'Ext.grid.column.Column',
        'Ext.grid.View'
    ],

    title: 'Customers',

    layout: {
        type: 'vbox',
        align: 'stretch',
        padding: 10
    },

    initComponent: function() {
        var me = this;

        me.addEvents(
            'customerselect'
        );

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'container',
                    height: 210,
                    layout: {
                        type: 'hbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'chart',
                            flex: 3,
                            animate: true,
                            store: 'CustomerCategories',
                            axes: [
                                {
                                    type: 'Category',
                                    fields: [
                                        'category'
                                    ],
                                    dashSize: 0,
                                    position: 'bottom'
                                },
                                {
                                    type: 'Numeric',
                                    fields: [
                                        'currentQtrTotal',
                                        'priorQtrTotal'
                                    ],
                                    label: {
                                        renderer: Ext.util.Format.currency
                                    },
                                    position: 'left'
                                }
                            ],
                            series: [
                                {
                                    type: 'column',
                                    renderer: function(sprite, record, attributes, index, store) {
                                        var colors = ['#3299cc', '#9bcde7', '#4db8ed', '#a6dcf6', '#8ebf2b', '#c6e192', '#1e7069', '#8eb8b4'];
                                        attributes.fill = colors[index];
                                        return attributes;
                                    },
                                    shadowAttributes: [
                                        
                                    ],
                                    tips: {
                                        trackMouse: true,
                                        renderer: function(record, item) {
                                            var quarter = item.yField === 'priorQtrTotal' ? 'Previous Quarter' : 'Current Quarter';
                                            this.update(quarter + ': ' + Ext.util.Format.currency(record.get(item.yField)));
                                        }
                                    },
                                    title: [
                                        'Previous Quarter',
                                        'Current Quarter'
                                    ],
                                    xField: 'category',
                                    yField: [
                                        'priorQtrTotal',
                                        'currentQtrTotal'
                                    ],
                                    groupGutter: 0,
                                    gutter: 20
                                }
                            ]
                        },
                        {
                            xtype: 'chart',
                            width: 350,
                            shadow: false,
                            animate: true,
                            insetPadding: 20,
                            store: 'CustomerCategories',
                            series: [
                                {
                                    type: 'pie',
                                    label: {
                                        field: 'category'
                                    },
                                    tips: {
                                        trackMouse: true,
                                        renderer: function(record) {
                                            this.update('Count: ' + record.get('count'));
                                        }
                                    },
                                    angleField: 'count',
                                    colorSet: [
                                        '#9bcde7',
                                        '#a6dcf6',
                                        '#c6e192',
                                        '#8eb8b4'
                                    ],
                                    donut: 45
                                },
                                {
                                    type: 'pie',
                                    label: {
                                        field: 'category',
                                        display: 'insideEnd',
                                        contrast: true,
                                        renderer: function(val) {
                                            // This is a little bit roundabout since we don't get access 
                                            // to the record or store in the renderer function.
                                    		var store = Ext.StoreManager.lookup('CustomerCategories'),
                                                total = store.sum('count');
                                            return Math.round(store.findRecord('category', val).get('count') / total * 100) + '%';
                                        }
                                    },
                                    showInLegend: true,
                                    tips: {
                                        trackMouse: true,
                                        renderer: function(record) {
                                            this.update('Count: ' + record.get('count'));
                                        }
                                    },
                                    angleField: 'count',
                                    colorSet: [
                                        '#3299cc',
                                        '#4db8ed',
                                        '#8ebf2b',
                                        '#1e7069'
                                    ],
                                    donut: 60
                                }
                            ],
                            legend: {
                                boxFill: '#fafafa',
                                boxStroke: '#e6e6e6',
                                padding: 10,
                                position: 'right'
                            }
                        }
                    ]
                },
                {
                    xtype: 'gridpanel',
                    flex: 1,
                    title: '',
                    disableSelection: true,
                    store: 'Customers',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'name',
                            text: 'Customer',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 145,
                            dataIndex: 'address',
                            text: 'StreetAddress'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 101,
                            dataIndex: 'city',
                            text: 'City'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 65,
                            dataIndex: 'state',
                            text: 'State'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 76,
                            dataIndex: 'zip',
                            text: 'Zip'
                        },
                        {
                            xtype: 'moneycolumn',
                            dataIndex: 'balance',
                            text: 'Balance'
                        }
                    ],
                    listeners: {
                        itemclick: {
                            fn: me.onGridpanelItemClick,
                            scope: me
                        }
                    },
                    viewConfig: {
                        stripeRows: false
                    }
                }
            ]
        });

        me.callParent(arguments);
    },

    onGridpanelItemClick: function(dataview, record, item, index, e, eOpts) {
        this.fireEvent('customerselect', record);
    }

});